name: ci

on:
  # Trigger the workflow on push to main or dev, except tag creation
  push:
    branches:
      - 'main'
      - 'dev'
  # Trigger the workflow on pull request
  pull_request: ~
  # Trigger the workflow manually
  workflow_dispatch: ~
  # Release trigger
  release:
    types: [created]

jobs:
  qa:
    if: github.event.pull_request.head.repo.full_name != github.repository || contains(github.event.pull_request.labels.*.name, 'ci:run')
    name: qa
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.3"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Check isort
        run: uvx ruff check --select I .

      - name: Check formatting
        run: uvx ruff format --diff .

      - name: Check linting
        run: uvx ruff check .

      - name: Setup uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}

  test:
    name: test
    needs:
      - qa
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-latest
        include:
          - name: ubuntu-latest
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.3"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Run tests
        run: uv run pytest tests --cov=pypq --cov-report=term-missing

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
